//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Age_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Age", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Age), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Age", "Age", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Age), "Household", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Household), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Round_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company), "Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Round_Round", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Economy_Round", "CurrentRound", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Household", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Household", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Household), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Industry_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Industry), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Location_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Location), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Wealth_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Wealth), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Good_Good", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Industry), "Good", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Good), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Location), "Household", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Household), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Profile", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Profile), "Household", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Household), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Wealth", "Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Wealth), "Household", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Household), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Location_Profile", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Profile), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Location), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Round_Round", "CurrentRound", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "PreviousRound", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Profile), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company), "Food_Good", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Food_Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Food_Industry_Good_Type", "Food_Industry_Good_Type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Good_Type), "Food_Good", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Location), "Food_Good", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry), "Food_Industry_Good_Type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Good_Type), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company), "Food_Household_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Household_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Household", "Household", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Household), "Food_Household_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Household_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Round", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "Food_Household_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Household_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company), "Food_Good_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Food_Good", "Food_Good", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good), "Food_Good_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Round", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "Food_Good_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "Food_GoodFood_Industry", "Food_Good", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good), "Food_Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Age", "Age", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Age), "Profile_Age_Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Profile_Age_Wealth), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Profile", "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Profile), "Profile_Age_Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Profile_Age_Wealth), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Wealth", "Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Wealth), "Profile_Age_Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Profile_Age_Wealth), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company), "Food_Industry_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Food_Industry", "Food_Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry), "Food_Industry_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Company_Round", "Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company_Round), "Food_Industry_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company), "Food_Industry_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Round", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "Food_Industry_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "Food_Industry_Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Industry_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Company_Round), "Food_Good_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "Company_User", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Company), "IM_User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.IM_User))]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "IM_User_Role", "IM_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.IM_Role), "IM_User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.IM_User))]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Household", "Household", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Household), "Food_Industry_Household_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Household_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Good", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Good), "Food_Industry_Household_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Household_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Round", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Round), "Food_Industry_Household_Company_Round", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Household_Company_Round), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "vw_LocationPointsLocation", "vw_LocationPoints", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.vw_LocationPoints), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Location), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Age", "Age", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Age), "Food_Industry_Age_Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Age_Wealth), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Economy", "Economy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Economy), "Food_Industry_Age_Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Age_Wealth), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Wealth", "Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Wealth), "Food_Industry_Age_Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Age_Wealth), true)]
[assembly: EdmRelationshipAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry), "Food_Industry_Age_Wealth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fuqua.CompetativeAnalysis.MarketGame.Food_Industry_Age_Wealth), true)]

#endregion

namespace Fuqua.CompetativeAnalysis.MarketGame
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GameDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GameDataObjectContext object using the connection string found in the 'GameDataObjectContext' section of the application configuration file.
        /// </summary>
        public GameDataObjectContext() : base("name=GameDataObjectContext", "GameDataObjectContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GameDataObjectContext object.
        /// </summary>
        public GameDataObjectContext(string connectionString) : base(connectionString, "GameDataObjectContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GameDataObjectContext object.
        /// </summary>
        public GameDataObjectContext(EntityConnection connection) : base(connection, "GameDataObjectContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Age> Ages
        {
            get
            {
                if ((_Ages == null))
                {
                    _Ages = base.CreateObjectSet<Age>("Ages");
                }
                return _Ages;
            }
        }
        private ObjectSet<Age> _Ages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company_Round> Company_Round
        {
            get
            {
                if ((_Company_Round == null))
                {
                    _Company_Round = base.CreateObjectSet<Company_Round>("Company_Round");
                }
                return _Company_Round;
            }
        }
        private ObjectSet<Company_Round> _Company_Round;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Economy> Economies
        {
            get
            {
                if ((_Economies == null))
                {
                    _Economies = base.CreateObjectSet<Economy>("Economies");
                }
                return _Economies;
            }
        }
        private ObjectSet<Economy> _Economies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Good> Goods
        {
            get
            {
                if ((_Goods == null))
                {
                    _Goods = base.CreateObjectSet<Good>("Goods");
                }
                return _Goods;
            }
        }
        private ObjectSet<Good> _Goods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Household> Households
        {
            get
            {
                if ((_Households == null))
                {
                    _Households = base.CreateObjectSet<Household>("Households");
                }
                return _Households;
            }
        }
        private ObjectSet<Household> _Households;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Industry> Industries
        {
            get
            {
                if ((_Industries == null))
                {
                    _Industries = base.CreateObjectSet<Industry>("Industries");
                }
                return _Industries;
            }
        }
        private ObjectSet<Industry> _Industries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Round> Rounds
        {
            get
            {
                if ((_Rounds == null))
                {
                    _Rounds = base.CreateObjectSet<Round>("Rounds");
                }
                return _Rounds;
            }
        }
        private ObjectSet<Round> _Rounds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wealth> Wealths
        {
            get
            {
                if ((_Wealths == null))
                {
                    _Wealths = base.CreateObjectSet<Wealth>("Wealths");
                }
                return _Wealths;
            }
        }
        private ObjectSet<Wealth> _Wealths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Food_Industry_Good_Type> Food_Industry_Good_Type
        {
            get
            {
                if ((_Food_Industry_Good_Type == null))
                {
                    _Food_Industry_Good_Type = base.CreateObjectSet<Food_Industry_Good_Type>("Food_Industry_Good_Type");
                }
                return _Food_Industry_Good_Type;
            }
        }
        private ObjectSet<Food_Industry_Good_Type> _Food_Industry_Good_Type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Food_Household_Company_Round> Food_Household_Company_Round
        {
            get
            {
                if ((_Food_Household_Company_Round == null))
                {
                    _Food_Household_Company_Round = base.CreateObjectSet<Food_Household_Company_Round>("Food_Household_Company_Round");
                }
                return _Food_Household_Company_Round;
            }
        }
        private ObjectSet<Food_Household_Company_Round> _Food_Household_Company_Round;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Food_Good_Round> Food_Good_Round
        {
            get
            {
                if ((_Food_Good_Round == null))
                {
                    _Food_Good_Round = base.CreateObjectSet<Food_Good_Round>("Food_Good_Round");
                }
                return _Food_Good_Round;
            }
        }
        private ObjectSet<Food_Good_Round> _Food_Good_Round;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile_Age_Wealth> Profile_Age_Wealth
        {
            get
            {
                if ((_Profile_Age_Wealth == null))
                {
                    _Profile_Age_Wealth = base.CreateObjectSet<Profile_Age_Wealth>("Profile_Age_Wealth");
                }
                return _Profile_Age_Wealth;
            }
        }
        private ObjectSet<Profile_Age_Wealth> _Profile_Age_Wealth;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Food_Industry_Company> Food_Industry_Company
        {
            get
            {
                if ((_Food_Industry_Company == null))
                {
                    _Food_Industry_Company = base.CreateObjectSet<Food_Industry_Company>("Food_Industry_Company");
                }
                return _Food_Industry_Company;
            }
        }
        private ObjectSet<Food_Industry_Company> _Food_Industry_Company;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Food_Industry_Company_Round> Food_Industry_Company_Round
        {
            get
            {
                if ((_Food_Industry_Company_Round == null))
                {
                    _Food_Industry_Company_Round = base.CreateObjectSet<Food_Industry_Company_Round>("Food_Industry_Company_Round");
                }
                return _Food_Industry_Company_Round;
            }
        }
        private ObjectSet<Food_Industry_Company_Round> _Food_Industry_Company_Round;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IM_Role> IM_Role
        {
            get
            {
                if ((_IM_Role == null))
                {
                    _IM_Role = base.CreateObjectSet<IM_Role>("IM_Role");
                }
                return _IM_Role;
            }
        }
        private ObjectSet<IM_Role> _IM_Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IM_User> IM_User
        {
            get
            {
                if ((_IM_User == null))
                {
                    _IM_User = base.CreateObjectSet<IM_User>("IM_User");
                }
                return _IM_User;
            }
        }
        private ObjectSet<IM_User> _IM_User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Food_Industry_Household_Company_Round> Food_Industry_Household_Company_Round
        {
            get
            {
                if ((_Food_Industry_Household_Company_Round == null))
                {
                    _Food_Industry_Household_Company_Round = base.CreateObjectSet<Food_Industry_Household_Company_Round>("Food_Industry_Household_Company_Round");
                }
                return _Food_Industry_Household_Company_Round;
            }
        }
        private ObjectSet<Food_Industry_Household_Company_Round> _Food_Industry_Household_Company_Round;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_LocationPoints> vw_LocationPoints
        {
            get
            {
                if ((_vw_LocationPoints == null))
                {
                    _vw_LocationPoints = base.CreateObjectSet<vw_LocationPoints>("vw_LocationPoints");
                }
                return _vw_LocationPoints;
            }
        }
        private ObjectSet<vw_LocationPoints> _vw_LocationPoints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Food_Industry_Age_Wealth> Food_Industry_Age_Wealth
        {
            get
            {
                if ((_Food_Industry_Age_Wealth == null))
                {
                    _Food_Industry_Age_Wealth = base.CreateObjectSet<Food_Industry_Age_Wealth>("Food_Industry_Age_Wealth");
                }
                return _Food_Industry_Age_Wealth;
            }
        }
        private ObjectSet<Food_Industry_Age_Wealth> _Food_Industry_Age_Wealth;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAges(Age age)
        {
            base.AddObject("Ages", age);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Company_Round EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompany_Round(Company_Round company_Round)
        {
            base.AddObject("Company_Round", company_Round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Economies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEconomies(Economy economy)
        {
            base.AddObject("Economies", economy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Goods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoods(Good good)
        {
            base.AddObject("Goods", good);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Households EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHouseholds(Household household)
        {
            base.AddObject("Households", household);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Industries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndustries(Industry industry)
        {
            base.AddObject("Industries", industry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRounds(Round round)
        {
            base.AddObject("Rounds", round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wealths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWealths(Wealth wealth)
        {
            base.AddObject("Wealths", wealth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Food_Industry_Good_Type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFood_Industry_Good_Type(Food_Industry_Good_Type food_Industry_Good_Type)
        {
            base.AddObject("Food_Industry_Good_Type", food_Industry_Good_Type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Food_Household_Company_Round EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFood_Household_Company_Round(Food_Household_Company_Round food_Household_Company_Round)
        {
            base.AddObject("Food_Household_Company_Round", food_Household_Company_Round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Food_Good_Round EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFood_Good_Round(Food_Good_Round food_Good_Round)
        {
            base.AddObject("Food_Good_Round", food_Good_Round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profile_Age_Wealth EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfile_Age_Wealth(Profile_Age_Wealth profile_Age_Wealth)
        {
            base.AddObject("Profile_Age_Wealth", profile_Age_Wealth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Food_Industry_Company EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFood_Industry_Company(Food_Industry_Company food_Industry_Company)
        {
            base.AddObject("Food_Industry_Company", food_Industry_Company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Food_Industry_Company_Round EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFood_Industry_Company_Round(Food_Industry_Company_Round food_Industry_Company_Round)
        {
            base.AddObject("Food_Industry_Company_Round", food_Industry_Company_Round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IM_Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIM_Role(IM_Role iM_Role)
        {
            base.AddObject("IM_Role", iM_Role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IM_User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIM_User(IM_User iM_User)
        {
            base.AddObject("IM_User", iM_User);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Food_Industry_Household_Company_Round EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFood_Industry_Household_Company_Round(Food_Industry_Household_Company_Round food_Industry_Household_Company_Round)
        {
            base.AddObject("Food_Industry_Household_Company_Round", food_Industry_Household_Company_Round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_LocationPoints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_LocationPoints(vw_LocationPoints vw_LocationPoints)
        {
            base.AddObject("vw_LocationPoints", vw_LocationPoints);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Food_Industry_Age_Wealth EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFood_Industry_Age_Wealth(Food_Industry_Age_Wealth food_Industry_Age_Wealth)
        {
            base.AddObject("Food_Industry_Age_Wealth", food_Industry_Age_Wealth);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="locationId">No Metadata Documentation available.</param>
        /// <param name="lng1">No Metadata Documentation available.</param>
        /// <param name="lat1">No Metadata Documentation available.</param>
        /// <param name="lng2">No Metadata Documentation available.</param>
        /// <param name="lat2">No Metadata Documentation available.</param>
        /// <param name="lng3">No Metadata Documentation available.</param>
        /// <param name="lat3">No Metadata Documentation available.</param>
        /// <param name="lng4">No Metadata Documentation available.</param>
        /// <param name="lat4">No Metadata Documentation available.</param>
        public int SetLocationShape(Nullable<global::System.Int32> locationId, Nullable<global::System.Double> lng1, Nullable<global::System.Double> lat1, Nullable<global::System.Double> lng2, Nullable<global::System.Double> lat2, Nullable<global::System.Double> lng3, Nullable<global::System.Double> lat3, Nullable<global::System.Double> lng4, Nullable<global::System.Double> lat4)
        {
            ObjectParameter locationIdParameter;
            if (locationId.HasValue)
            {
                locationIdParameter = new ObjectParameter("LocationId", locationId);
            }
            else
            {
                locationIdParameter = new ObjectParameter("LocationId", typeof(global::System.Int32));
            }
    
            ObjectParameter lng1Parameter;
            if (lng1.HasValue)
            {
                lng1Parameter = new ObjectParameter("lng1", lng1);
            }
            else
            {
                lng1Parameter = new ObjectParameter("lng1", typeof(global::System.Double));
            }
    
            ObjectParameter lat1Parameter;
            if (lat1.HasValue)
            {
                lat1Parameter = new ObjectParameter("lat1", lat1);
            }
            else
            {
                lat1Parameter = new ObjectParameter("lat1", typeof(global::System.Double));
            }
    
            ObjectParameter lng2Parameter;
            if (lng2.HasValue)
            {
                lng2Parameter = new ObjectParameter("lng2", lng2);
            }
            else
            {
                lng2Parameter = new ObjectParameter("lng2", typeof(global::System.Double));
            }
    
            ObjectParameter lat2Parameter;
            if (lat2.HasValue)
            {
                lat2Parameter = new ObjectParameter("lat2", lat2);
            }
            else
            {
                lat2Parameter = new ObjectParameter("lat2", typeof(global::System.Double));
            }
    
            ObjectParameter lng3Parameter;
            if (lng3.HasValue)
            {
                lng3Parameter = new ObjectParameter("lng3", lng3);
            }
            else
            {
                lng3Parameter = new ObjectParameter("lng3", typeof(global::System.Double));
            }
    
            ObjectParameter lat3Parameter;
            if (lat3.HasValue)
            {
                lat3Parameter = new ObjectParameter("lat3", lat3);
            }
            else
            {
                lat3Parameter = new ObjectParameter("lat3", typeof(global::System.Double));
            }
    
            ObjectParameter lng4Parameter;
            if (lng4.HasValue)
            {
                lng4Parameter = new ObjectParameter("lng4", lng4);
            }
            else
            {
                lng4Parameter = new ObjectParameter("lng4", typeof(global::System.Double));
            }
    
            ObjectParameter lat4Parameter;
            if (lat4.HasValue)
            {
                lat4Parameter = new ObjectParameter("lat4", lat4);
            }
            else
            {
                lat4Parameter = new ObjectParameter("lat4", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("SetLocationShape", locationIdParameter, lng1Parameter, lat1Parameter, lng2Parameter, lat2Parameter, lng3Parameter, lat3Parameter, lng4Parameter, lat4Parameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Age")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Age : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Age object.
        /// </summary>
        /// <param name="ageId">Initial value of the AgeId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="probability">Initial value of the Probability property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static Age CreateAge(global::System.Int32 ageId, global::System.Int32 economyId, global::System.String name, global::System.Double probability, global::System.Int32 displayOrder)
        {
            Age age = new Age();
            age.AgeId = ageId;
            age.EconomyId = economyId;
            age.Name = name;
            age.Probability = probability;
            age.DisplayOrder = displayOrder;
            return age;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeId
        {
            get
            {
                return _AgeId;
            }
            set
            {
                if (_AgeId != value)
                {
                    OnAgeIdChanging(value);
                    ReportPropertyChanging("AgeId");
                    _AgeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgeId");
                    OnAgeIdChanged();
                }
            }
        }
        private global::System.Int32 _AgeId;
        partial void OnAgeIdChanging(global::System.Int32 value);
        partial void OnAgeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Probability
        {
            get
            {
                return _Probability;
            }
            set
            {
                OnProbabilityChanging(value);
                ReportPropertyChanging("Probability");
                _Probability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Probability");
                OnProbabilityChanged();
            }
        }
        private global::System.Double _Probability;
        partial void OnProbabilityChanging(global::System.Double value);
        partial void OnProbabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Age_Economy", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Age_Economy", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Age_Economy", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Age_Economy", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Age_Economy", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Age", "Household")]
        public EntityCollection<Household> Households
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Age", "Household");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Age", "Household", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Age", "Profile_Age_Wealth")]
        public EntityCollection<Profile_Age_Wealth> Profile_Age_Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Age", "Profile_Age_Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Age", "Profile_Age_Wealth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Age", "Food_Industry_Age_Wealth")]
        public EntityCollection<Food_Industry_Age_Wealth> Food_Industry_Age_Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Age", "Food_Industry_Age_Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Age", "Food_Industry_Age_Wealth", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Company CreateCompany(global::System.Int32 companyId, global::System.Int32 economyId, global::System.String name)
        {
            Company company = new Company();
            company.CompanyId = companyId;
            company.EconomyId = economyId;
            company.Name = name;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Economy", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Economy", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Economy", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Economy", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Economy", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Round_Company", "Company_Round")]
        public EntityCollection<Company_Round> Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Company", "Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Company", "Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Company", "Food_Good")]
        public EntityCollection<Food_Good> Food_Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Company", "Food_Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Company", "Food_Good", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Company", "Food_Household_Company_Round")]
        public EntityCollection<Food_Household_Company_Round> Food_Household_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Company", "Food_Household_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Company", "Food_Household_Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Company", "Food_Good_Round")]
        public EntityCollection<Food_Good_Round> Food_Good_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Company", "Food_Good_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Company", "Food_Good_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Company", "Food_Industry_Company")]
        public EntityCollection<Food_Industry_Company> Food_Industry_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Company", "Food_Industry_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Company", "Food_Industry_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "Company_User", "IM_User")]
        public EntityCollection<IM_User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IM_User>("Fuqua.CompetativeAnalysis.MarketGame.Company_User", "IM_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IM_User>("Fuqua.CompetativeAnalysis.MarketGame.Company_User", "IM_User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Company_Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company_Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company_Round object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="financeActivity">Initial value of the FinanceActivity property.</param>
        /// <param name="submitted">Initial value of the Submitted property.</param>
        /// <param name="lastModifiedTimestamp">Initial value of the LastModifiedTimestamp property.</param>
        public static Company_Round CreateCompany_Round(global::System.Int32 roundId, global::System.Int32 companyId, global::System.Int32 economyId, global::System.Double financeActivity, global::System.Boolean submitted, global::System.DateTime lastModifiedTimestamp)
        {
            Company_Round company_Round = new Company_Round();
            company_Round.RoundId = roundId;
            company_Round.CompanyId = companyId;
            company_Round.EconomyId = economyId;
            company_Round.FinanceActivity = financeActivity;
            company_Round.Submitted = submitted;
            company_Round.LastModifiedTimestamp = lastModifiedTimestamp;
            return company_Round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StartingCash
        {
            get
            {
                return _StartingCash;
            }
            set
            {
                OnStartingCashChanging(value);
                ReportPropertyChanging("StartingCash");
                _StartingCash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartingCash");
                OnStartingCashChanged();
            }
        }
        private global::System.Double _StartingCash = 0D;
        partial void OnStartingCashChanging(global::System.Double value);
        partial void OnStartingCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double EndingCash
        {
            get
            {
                return _EndingCash;
            }
            set
            {
                OnEndingCashChanging(value);
                ReportPropertyChanging("EndingCash");
                _EndingCash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndingCash");
                OnEndingCashChanged();
            }
        }
        private global::System.Double _EndingCash = 0D;
        partial void OnEndingCashChanging(global::System.Double value);
        partial void OnEndingCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Revenue
        {
            get
            {
                return _Revenue;
            }
            set
            {
                OnRevenueChanging(value);
                ReportPropertyChanging("Revenue");
                _Revenue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Revenue");
                OnRevenueChanged();
            }
        }
        private global::System.Double _Revenue = 0D;
        partial void OnRevenueChanging(global::System.Double value);
        partial void OnRevenueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Expenses
        {
            get
            {
                return _Expenses;
            }
            set
            {
                OnExpensesChanging(value);
                ReportPropertyChanging("Expenses");
                _Expenses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Expenses");
                OnExpensesChanged();
            }
        }
        private global::System.Double _Expenses = 0D;
        partial void OnExpensesChanging(global::System.Double value);
        partial void OnExpensesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FinanceActivity
        {
            get
            {
                return _FinanceActivity;
            }
            set
            {
                OnFinanceActivityChanging(value);
                ReportPropertyChanging("FinanceActivity");
                _FinanceActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinanceActivity");
                OnFinanceActivityChanged();
            }
        }
        private global::System.Double _FinanceActivity;
        partial void OnFinanceActivityChanging(global::System.Double value);
        partial void OnFinanceActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Submitted
        {
            get
            {
                return _Submitted;
            }
            set
            {
                OnSubmittedChanging(value);
                ReportPropertyChanging("Submitted");
                _Submitted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Submitted");
                OnSubmittedChanged();
            }
        }
        private global::System.Boolean _Submitted;
        partial void OnSubmittedChanging(global::System.Boolean value);
        partial void OnSubmittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmittedTimestamp
        {
            get
            {
                return _SubmittedTimestamp;
            }
            set
            {
                OnSubmittedTimestampChanging(value);
                ReportPropertyChanging("SubmittedTimestamp");
                _SubmittedTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmittedTimestamp");
                OnSubmittedTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmittedTimestamp;
        partial void OnSubmittedTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmittedTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModifiedTimestamp
        {
            get
            {
                return _LastModifiedTimestamp;
            }
            set
            {
                OnLastModifiedTimestampChanging(value);
                ReportPropertyChanging("LastModifiedTimestamp");
                _LastModifiedTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedTimestamp");
                OnLastModifiedTimestampChanged();
            }
        }
        private global::System.DateTime _LastModifiedTimestamp;
        partial void OnLastModifiedTimestampChanging(global::System.DateTime value);
        partial void OnLastModifiedTimestampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Round_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Round_Round", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Round", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Round", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Round", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Round", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Company_Round", "Food_Industry_Company_Round")]
        public EntityCollection<Food_Industry_Company_Round> Food_Industry_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Company_Round", "Food_Industry_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Company_Round", "Food_Industry_Company_Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Economy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Economy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Economy object.
        /// </summary>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="reference">Initial value of the Reference property.</param>
        public static Economy CreateEconomy(global::System.Int32 economyId, global::System.String name, global::System.DateTime dateCreated, global::System.String reference)
        {
            Economy economy = new Economy();
            economy.EconomyId = economyId;
            economy.Name = name;
            economy.DateCreated = dateCreated;
            economy.Reference = reference;
            return economy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// Current Round
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentRoundId
        {
            get
            {
                return _CurrentRoundId;
            }
            set
            {
                OnCurrentRoundIdChanging(value);
                ReportPropertyChanging("CurrentRoundId");
                _CurrentRoundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentRoundId");
                OnCurrentRoundIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentRoundId;
        partial void OnCurrentRoundIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Age_Economy", "Age")]
        public EntityCollection<Age> Ages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Age_Economy", "Age");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Age_Economy", "Age", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Economy", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Economy", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Economy", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Economy_Round", "CurrentRound")]
        public Round CurrentRound
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Economy_Round", "CurrentRound").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Economy_Round", "CurrentRound").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> CurrentRoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Economy_Round", "CurrentRound");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Economy_Round", "CurrentRound", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Household", "Household")]
        public EntityCollection<Household> Households
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Household", "Household");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Household", "Household", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Industry_Economy", "Industry")]
        public EntityCollection<Industry> Industries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Industry_Economy", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Industry_Economy", "Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Location_Economy", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Economy", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Economy", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Wealth_Economy", "Wealth")]
        public EntityCollection<Wealth> Wealths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Wealth_Economy", "Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Wealth_Economy", "Wealth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Economy", "Profile")]
        public EntityCollection<Profile> Profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Economy", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Economy", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Economy", "Food_Industry")]
        public EntityCollection<Food_Industry> Food_Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Economy", "Food_Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Economy", "Food_Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Economy", "Food_Industry_Age_Wealth")]
        public EntityCollection<Food_Industry_Age_Wealth> Food_Industry_Age_Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Economy", "Food_Industry_Age_Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Economy", "Food_Industry_Age_Wealth", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Good")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Good : Good
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Good object.
        /// </summary>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="goodId">Initial value of the GoodId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="identifier">Initial value of the Identifier property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        public static Food_Good CreateFood_Good(global::System.Int32 industryId, global::System.Int32 goodId, global::System.Int32 economyId, global::System.String identifier, global::System.Int32 companyId, global::System.Int32 locationId, global::System.Int32 typeId, global::System.Double latitude, global::System.Double longitude)
        {
            Food_Good food_Good = new Food_Good();
            food_Good.IndustryId = industryId;
            food_Good.GoodId = goodId;
            food_Good.EconomyId = economyId;
            food_Good.Identifier = identifier;
            food_Good.CompanyId = companyId;
            food_Good.LocationId = locationId;
            food_Good.TypeId = typeId;
            food_Good.Latitude = latitude;
            food_Good.Longitude = longitude;
            return food_Good;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Food_Industry_Good_Type", "Food_Industry_Good_Type")]
        public Food_Industry_Good_Type Food_Industry_Good_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Good_Type>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Food_Industry_Good_Type", "Food_Industry_Good_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Good_Type>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Food_Industry_Good_Type", "Food_Industry_Good_Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Industry_Good_Type> Food_Industry_Good_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Good_Type>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Food_Industry_Good_Type", "Food_Industry_Good_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Industry_Good_Type>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Food_Industry_Good_Type", "Food_Industry_Good_Type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Food_Good", "Food_Good_Round")]
        public EntityCollection<Food_Good_Round> Food_Good_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Good", "Food_Good_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Good", "Food_Good_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "Food_GoodFood_Industry", "Food_Industry")]
        public Food_Industry Food_Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.Food_GoodFood_Industry", "Food_Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.Food_GoodFood_Industry", "Food_Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Industry> Food_IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.Food_GoodFood_Industry", "Food_Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.Food_GoodFood_Industry", "Food_Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Industry_Household_Company_Round")]
        public EntityCollection<Food_Industry_Household_Company_Round> Food_Industry_Household_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Industry_Household_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Industry_Household_Company_Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Good_Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Good_Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Good_Round object.
        /// </summary>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="goodId">Initial value of the GoodId property.</param>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="capacityStart">Initial value of the CapacityStart property.</param>
        /// <param name="capacityNew">Initial value of the CapacityNew property.</param>
        /// <param name="capacitySold">Initial value of the CapacitySold property.</param>
        /// <param name="capacityDecay">Initial value of the CapacityDecay property.</param>
        /// <param name="capacityEnd">Initial value of the CapacityEnd property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="actualSales">Initial value of the ActualSales property.</param>
        /// <param name="costOfProduction">Initial value of the CostOfProduction property.</param>
        /// <param name="costOfCapacity">Initial value of the CostOfCapacity property.</param>
        /// <param name="production">Initial value of the Production property.</param>
        /// <param name="inventoryStart">Initial value of the InventoryStart property.</param>
        /// <param name="inventoryEnd">Initial value of the InventoryEnd property.</param>
        /// <param name="costOfMaintenance">Initial value of the CostOfMaintenance property.</param>
        /// <param name="costOfInventory">Initial value of the CostOfInventory property.</param>
        /// <param name="isRollover">Initial value of the IsRollover property.</param>
        public static Food_Good_Round CreateFood_Good_Round(global::System.Int32 industryId, global::System.Int32 goodId, global::System.Int32 roundId, global::System.Int32 economyId, global::System.Int32 companyId, global::System.Double capacityStart, global::System.Double capacityNew, global::System.Double capacitySold, global::System.Double capacityDecay, global::System.Double capacityEnd, global::System.Double price, global::System.Double actualSales, global::System.Double costOfProduction, global::System.Double costOfCapacity, global::System.Double production, global::System.Double inventoryStart, global::System.Double inventoryEnd, global::System.Double costOfMaintenance, global::System.Double costOfInventory, global::System.Boolean isRollover)
        {
            Food_Good_Round food_Good_Round = new Food_Good_Round();
            food_Good_Round.IndustryId = industryId;
            food_Good_Round.GoodId = goodId;
            food_Good_Round.RoundId = roundId;
            food_Good_Round.EconomyId = economyId;
            food_Good_Round.CompanyId = companyId;
            food_Good_Round.CapacityStart = capacityStart;
            food_Good_Round.CapacityNew = capacityNew;
            food_Good_Round.CapacitySold = capacitySold;
            food_Good_Round.CapacityDecay = capacityDecay;
            food_Good_Round.CapacityEnd = capacityEnd;
            food_Good_Round.Price = price;
            food_Good_Round.ActualSales = actualSales;
            food_Good_Round.CostOfProduction = costOfProduction;
            food_Good_Round.CostOfCapacity = costOfCapacity;
            food_Good_Round.Production = production;
            food_Good_Round.InventoryStart = inventoryStart;
            food_Good_Round.InventoryEnd = inventoryEnd;
            food_Good_Round.CostOfMaintenance = costOfMaintenance;
            food_Good_Round.CostOfInventory = costOfInventory;
            food_Good_Round.IsRollover = isRollover;
            return food_Good_Round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodId
        {
            get
            {
                return _GoodId;
            }
            set
            {
                if (_GoodId != value)
                {
                    OnGoodIdChanging(value);
                    ReportPropertyChanging("GoodId");
                    _GoodId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoodId");
                    OnGoodIdChanged();
                }
            }
        }
        private global::System.Int32 _GoodId;
        partial void OnGoodIdChanging(global::System.Int32 value);
        partial void OnGoodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityStart
        {
            get
            {
                return _CapacityStart;
            }
            set
            {
                OnCapacityStartChanging(value);
                ReportPropertyChanging("CapacityStart");
                _CapacityStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityStart");
                OnCapacityStartChanged();
            }
        }
        private global::System.Double _CapacityStart;
        partial void OnCapacityStartChanging(global::System.Double value);
        partial void OnCapacityStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityNew
        {
            get
            {
                return _CapacityNew;
            }
            set
            {
                OnCapacityNewChanging(value);
                ReportPropertyChanging("CapacityNew");
                _CapacityNew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityNew");
                OnCapacityNewChanged();
            }
        }
        private global::System.Double _CapacityNew;
        partial void OnCapacityNewChanging(global::System.Double value);
        partial void OnCapacityNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacitySold
        {
            get
            {
                return _CapacitySold;
            }
            set
            {
                OnCapacitySoldChanging(value);
                ReportPropertyChanging("CapacitySold");
                _CapacitySold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacitySold");
                OnCapacitySoldChanged();
            }
        }
        private global::System.Double _CapacitySold;
        partial void OnCapacitySoldChanging(global::System.Double value);
        partial void OnCapacitySoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityDecay
        {
            get
            {
                return _CapacityDecay;
            }
            set
            {
                OnCapacityDecayChanging(value);
                ReportPropertyChanging("CapacityDecay");
                _CapacityDecay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityDecay");
                OnCapacityDecayChanged();
            }
        }
        private global::System.Double _CapacityDecay;
        partial void OnCapacityDecayChanging(global::System.Double value);
        partial void OnCapacityDecayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityEnd
        {
            get
            {
                return _CapacityEnd;
            }
            set
            {
                OnCapacityEndChanging(value);
                ReportPropertyChanging("CapacityEnd");
                _CapacityEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityEnd");
                OnCapacityEndChanged();
            }
        }
        private global::System.Double _CapacityEnd;
        partial void OnCapacityEndChanging(global::System.Double value);
        partial void OnCapacityEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ActualSales
        {
            get
            {
                return _ActualSales;
            }
            set
            {
                OnActualSalesChanging(value);
                ReportPropertyChanging("ActualSales");
                _ActualSales = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualSales");
                OnActualSalesChanged();
            }
        }
        private global::System.Double _ActualSales;
        partial void OnActualSalesChanging(global::System.Double value);
        partial void OnActualSalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfProduction
        {
            get
            {
                return _CostOfProduction;
            }
            set
            {
                OnCostOfProductionChanging(value);
                ReportPropertyChanging("CostOfProduction");
                _CostOfProduction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfProduction");
                OnCostOfProductionChanged();
            }
        }
        private global::System.Double _CostOfProduction;
        partial void OnCostOfProductionChanging(global::System.Double value);
        partial void OnCostOfProductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfCapacity
        {
            get
            {
                return _CostOfCapacity;
            }
            set
            {
                OnCostOfCapacityChanging(value);
                ReportPropertyChanging("CostOfCapacity");
                _CostOfCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfCapacity");
                OnCostOfCapacityChanged();
            }
        }
        private global::System.Double _CostOfCapacity;
        partial void OnCostOfCapacityChanging(global::System.Double value);
        partial void OnCostOfCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Production
        {
            get
            {
                return _Production;
            }
            set
            {
                OnProductionChanging(value);
                ReportPropertyChanging("Production");
                _Production = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Production");
                OnProductionChanged();
            }
        }
        private global::System.Double _Production;
        partial void OnProductionChanging(global::System.Double value);
        partial void OnProductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InventoryStart
        {
            get
            {
                return _InventoryStart;
            }
            set
            {
                OnInventoryStartChanging(value);
                ReportPropertyChanging("InventoryStart");
                _InventoryStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryStart");
                OnInventoryStartChanged();
            }
        }
        private global::System.Double _InventoryStart;
        partial void OnInventoryStartChanging(global::System.Double value);
        partial void OnInventoryStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InventoryEnd
        {
            get
            {
                return _InventoryEnd;
            }
            set
            {
                OnInventoryEndChanging(value);
                ReportPropertyChanging("InventoryEnd");
                _InventoryEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryEnd");
                OnInventoryEndChanged();
            }
        }
        private global::System.Double _InventoryEnd;
        partial void OnInventoryEndChanging(global::System.Double value);
        partial void OnInventoryEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfMaintenance
        {
            get
            {
                return _CostOfMaintenance;
            }
            set
            {
                OnCostOfMaintenanceChanging(value);
                ReportPropertyChanging("CostOfMaintenance");
                _CostOfMaintenance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfMaintenance");
                OnCostOfMaintenanceChanged();
            }
        }
        private global::System.Double _CostOfMaintenance;
        partial void OnCostOfMaintenanceChanging(global::System.Double value);
        partial void OnCostOfMaintenanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfInventory
        {
            get
            {
                return _CostOfInventory;
            }
            set
            {
                OnCostOfInventoryChanging(value);
                ReportPropertyChanging("CostOfInventory");
                _CostOfInventory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfInventory");
                OnCostOfInventoryChanged();
            }
        }
        private global::System.Double _CostOfInventory;
        partial void OnCostOfInventoryChanging(global::System.Double value);
        partial void OnCostOfInventoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRollover
        {
            get
            {
                return _IsRollover;
            }
            set
            {
                OnIsRolloverChanging(value);
                ReportPropertyChanging("IsRollover");
                _IsRollover = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRollover");
                OnIsRolloverChanged();
            }
        }
        private global::System.Boolean _IsRollover;
        partial void OnIsRolloverChanging(global::System.Boolean value);
        partial void OnIsRolloverChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Food_Good", "Food_Good")]
        public Food_Good Food_Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Good", "Food_Good").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Good", "Food_Good").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Good> Food_GoodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Good", "Food_Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Good", "Food_Good", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Round", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Round", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Round", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Round", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Round", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Industry_Company_Round")]
        public Food_Industry_Company_Round Food_Industry_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Industry_Company_Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Industry_Company_Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Industry_Company_Round> Food_Industry_Company_RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Industry_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Industry_Company_Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Household_Company_Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Household_Company_Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Household_Company_Round object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="householdId">Initial value of the HouseholdId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="reputation">Initial value of the Reputation property.</param>
        public static Food_Household_Company_Round CreateFood_Household_Company_Round(global::System.Int32 roundId, global::System.Int32 householdId, global::System.Int32 companyId, global::System.Int32 economyId, global::System.Double reputation)
        {
            Food_Household_Company_Round food_Household_Company_Round = new Food_Household_Company_Round();
            food_Household_Company_Round.RoundId = roundId;
            food_Household_Company_Round.HouseholdId = householdId;
            food_Household_Company_Round.CompanyId = companyId;
            food_Household_Company_Round.EconomyId = economyId;
            food_Household_Company_Round.Reputation = reputation;
            return food_Household_Company_Round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseholdId
        {
            get
            {
                return _HouseholdId;
            }
            set
            {
                if (_HouseholdId != value)
                {
                    OnHouseholdIdChanging(value);
                    ReportPropertyChanging("HouseholdId");
                    _HouseholdId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseholdId");
                    OnHouseholdIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseholdId;
        partial void OnHouseholdIdChanging(global::System.Int32 value);
        partial void OnHouseholdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Reputation
        {
            get
            {
                return _Reputation;
            }
            set
            {
                OnReputationChanging(value);
                ReportPropertyChanging("Reputation");
                _Reputation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reputation");
                OnReputationChanged();
            }
        }
        private global::System.Double _Reputation;
        partial void OnReputationChanging(global::System.Double value);
        partial void OnReputationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Household", "Household")]
        public Household Household
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Household", "Household").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Household", "Household").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Household> HouseholdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Household", "Household");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Household", "Household", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Round", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Round", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Round", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Round", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Round", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Industry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Industry : Industry
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Industry object.
        /// </summary>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="entryCostMean">Initial value of the EntryCostMean property.</param>
        /// <param name="entryCostStdDev">Initial value of the EntryCostStdDev property.</param>
        /// <param name="capacityCostMean">Initial value of the CapacityCostMean property.</param>
        /// <param name="capacityCostStdDev">Initial value of the CapacityCostStdDev property.</param>
        /// <param name="marginalCostMean">Initial value of the MarginalCostMean property.</param>
        /// <param name="marginalCostStdDev">Initial value of the MarginalCostStdDev property.</param>
        /// <param name="capacityDecayRate">Initial value of the CapacityDecayRate property.</param>
        /// <param name="capacityResaleRate">Initial value of the CapacityResaleRate property.</param>
        /// <param name="canHoldInventory">Initial value of the CanHoldInventory property.</param>
        /// <param name="elasticity">Initial value of the Elasticity property.</param>
        /// <param name="maintenanceCostMean">Initial value of the MaintenanceCostMean property.</param>
        /// <param name="maintenanceCostStdDev">Initial value of the MaintenanceCostStdDev property.</param>
        /// <param name="inventoryCostMean">Initial value of the InventoryCostMean property.</param>
        /// <param name="inventoryCostStdDev">Initial value of the InventoryCostStdDev property.</param>
        public static Food_Industry CreateFood_Industry(global::System.Int32 industryId, global::System.Int32 economyId, global::System.String name, global::System.String type, global::System.Double entryCostMean, global::System.Double entryCostStdDev, global::System.Double capacityCostMean, global::System.Double capacityCostStdDev, global::System.Double marginalCostMean, global::System.Double marginalCostStdDev, global::System.Double capacityDecayRate, global::System.Double capacityResaleRate, global::System.Boolean canHoldInventory, global::System.Double elasticity, global::System.Double maintenanceCostMean, global::System.Double maintenanceCostStdDev, global::System.Double inventoryCostMean, global::System.Double inventoryCostStdDev)
        {
            Food_Industry food_Industry = new Food_Industry();
            food_Industry.IndustryId = industryId;
            food_Industry.EconomyId = economyId;
            food_Industry.Name = name;
            food_Industry.Type = type;
            food_Industry.EntryCostMean = entryCostMean;
            food_Industry.EntryCostStdDev = entryCostStdDev;
            food_Industry.CapacityCostMean = capacityCostMean;
            food_Industry.CapacityCostStdDev = capacityCostStdDev;
            food_Industry.MarginalCostMean = marginalCostMean;
            food_Industry.MarginalCostStdDev = marginalCostStdDev;
            food_Industry.CapacityDecayRate = capacityDecayRate;
            food_Industry.CapacityResaleRate = capacityResaleRate;
            food_Industry.CanHoldInventory = canHoldInventory;
            food_Industry.Elasticity = elasticity;
            food_Industry.MaintenanceCostMean = maintenanceCostMean;
            food_Industry.MaintenanceCostStdDev = maintenanceCostStdDev;
            food_Industry.InventoryCostMean = inventoryCostMean;
            food_Industry.InventoryCostStdDev = inventoryCostStdDev;
            return food_Industry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// Entry Cost Mean
        /// </summary>
        /// <LongDescription>
        /// The mean value for the distribution for entry cost for teams when generating a company&apos;s settings for this industry.
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double EntryCostMean
        {
            get
            {
                return _EntryCostMean;
            }
            set
            {
                OnEntryCostMeanChanging(value);
                ReportPropertyChanging("EntryCostMean");
                _EntryCostMean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryCostMean");
                OnEntryCostMeanChanged();
            }
        }
        private global::System.Double _EntryCostMean;
        partial void OnEntryCostMeanChanging(global::System.Double value);
        partial void OnEntryCostMeanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double EntryCostStdDev
        {
            get
            {
                return _EntryCostStdDev;
            }
            set
            {
                OnEntryCostStdDevChanging(value);
                ReportPropertyChanging("EntryCostStdDev");
                _EntryCostStdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryCostStdDev");
                OnEntryCostStdDevChanged();
            }
        }
        private global::System.Double _EntryCostStdDev;
        partial void OnEntryCostStdDevChanging(global::System.Double value);
        partial void OnEntryCostStdDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityCostMean
        {
            get
            {
                return _CapacityCostMean;
            }
            set
            {
                OnCapacityCostMeanChanging(value);
                ReportPropertyChanging("CapacityCostMean");
                _CapacityCostMean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityCostMean");
                OnCapacityCostMeanChanged();
            }
        }
        private global::System.Double _CapacityCostMean;
        partial void OnCapacityCostMeanChanging(global::System.Double value);
        partial void OnCapacityCostMeanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityCostStdDev
        {
            get
            {
                return _CapacityCostStdDev;
            }
            set
            {
                OnCapacityCostStdDevChanging(value);
                ReportPropertyChanging("CapacityCostStdDev");
                _CapacityCostStdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityCostStdDev");
                OnCapacityCostStdDevChanged();
            }
        }
        private global::System.Double _CapacityCostStdDev;
        partial void OnCapacityCostStdDevChanging(global::System.Double value);
        partial void OnCapacityCostStdDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MarginalCostMean
        {
            get
            {
                return _MarginalCostMean;
            }
            set
            {
                OnMarginalCostMeanChanging(value);
                ReportPropertyChanging("MarginalCostMean");
                _MarginalCostMean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginalCostMean");
                OnMarginalCostMeanChanged();
            }
        }
        private global::System.Double _MarginalCostMean;
        partial void OnMarginalCostMeanChanging(global::System.Double value);
        partial void OnMarginalCostMeanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MarginalCostStdDev
        {
            get
            {
                return _MarginalCostStdDev;
            }
            set
            {
                OnMarginalCostStdDevChanging(value);
                ReportPropertyChanging("MarginalCostStdDev");
                _MarginalCostStdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginalCostStdDev");
                OnMarginalCostStdDevChanged();
            }
        }
        private global::System.Double _MarginalCostStdDev;
        partial void OnMarginalCostStdDevChanging(global::System.Double value);
        partial void OnMarginalCostStdDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityDecayRate
        {
            get
            {
                return _CapacityDecayRate;
            }
            set
            {
                OnCapacityDecayRateChanging(value);
                ReportPropertyChanging("CapacityDecayRate");
                _CapacityDecayRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityDecayRate");
                OnCapacityDecayRateChanged();
            }
        }
        private global::System.Double _CapacityDecayRate;
        partial void OnCapacityDecayRateChanging(global::System.Double value);
        partial void OnCapacityDecayRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityResaleRate
        {
            get
            {
                return _CapacityResaleRate;
            }
            set
            {
                OnCapacityResaleRateChanging(value);
                ReportPropertyChanging("CapacityResaleRate");
                _CapacityResaleRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityResaleRate");
                OnCapacityResaleRateChanged();
            }
        }
        private global::System.Double _CapacityResaleRate;
        partial void OnCapacityResaleRateChanging(global::System.Double value);
        partial void OnCapacityResaleRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanHoldInventory
        {
            get
            {
                return _CanHoldInventory;
            }
            set
            {
                OnCanHoldInventoryChanging(value);
                ReportPropertyChanging("CanHoldInventory");
                _CanHoldInventory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanHoldInventory");
                OnCanHoldInventoryChanged();
            }
        }
        private global::System.Boolean _CanHoldInventory;
        partial void OnCanHoldInventoryChanging(global::System.Boolean value);
        partial void OnCanHoldInventoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Elasticity
        {
            get
            {
                return _Elasticity;
            }
            set
            {
                OnElasticityChanging(value);
                ReportPropertyChanging("Elasticity");
                _Elasticity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Elasticity");
                OnElasticityChanged();
            }
        }
        private global::System.Double _Elasticity;
        partial void OnElasticityChanging(global::System.Double value);
        partial void OnElasticityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaintenanceCostMean
        {
            get
            {
                return _MaintenanceCostMean;
            }
            set
            {
                OnMaintenanceCostMeanChanging(value);
                ReportPropertyChanging("MaintenanceCostMean");
                _MaintenanceCostMean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaintenanceCostMean");
                OnMaintenanceCostMeanChanged();
            }
        }
        private global::System.Double _MaintenanceCostMean;
        partial void OnMaintenanceCostMeanChanging(global::System.Double value);
        partial void OnMaintenanceCostMeanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaintenanceCostStdDev
        {
            get
            {
                return _MaintenanceCostStdDev;
            }
            set
            {
                OnMaintenanceCostStdDevChanging(value);
                ReportPropertyChanging("MaintenanceCostStdDev");
                _MaintenanceCostStdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaintenanceCostStdDev");
                OnMaintenanceCostStdDevChanged();
            }
        }
        private global::System.Double _MaintenanceCostStdDev;
        partial void OnMaintenanceCostStdDevChanging(global::System.Double value);
        partial void OnMaintenanceCostStdDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InventoryCostMean
        {
            get
            {
                return _InventoryCostMean;
            }
            set
            {
                OnInventoryCostMeanChanging(value);
                ReportPropertyChanging("InventoryCostMean");
                _InventoryCostMean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryCostMean");
                OnInventoryCostMeanChanged();
            }
        }
        private global::System.Double _InventoryCostMean;
        partial void OnInventoryCostMeanChanging(global::System.Double value);
        partial void OnInventoryCostMeanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InventoryCostStdDev
        {
            get
            {
                return _InventoryCostStdDev;
            }
            set
            {
                OnInventoryCostStdDevChanging(value);
                ReportPropertyChanging("InventoryCostStdDev");
                _InventoryCostStdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryCostStdDev");
                OnInventoryCostStdDevChanged();
            }
        }
        private global::System.Double _InventoryCostStdDev;
        partial void OnInventoryCostStdDevChanging(global::System.Double value);
        partial void OnInventoryCostStdDevChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry_Good_Type")]
        public EntityCollection<Food_Industry_Good_Type> Food_Industry_Good_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Good_Type>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry_Good_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Good_Type>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry_Good_Type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "Food_GoodFood_Industry", "Food_Good")]
        public EntityCollection<Food_Good> Food_Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.Food_GoodFood_Industry", "Food_Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.Food_GoodFood_Industry", "Food_Good", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Food_Industry", "Food_Industry_Company")]
        public EntityCollection<Food_Industry_Company> Food_Industry_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Food_Industry", "Food_Industry_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Food_Industry", "Food_Industry_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry_Age_Wealth")]
        public EntityCollection<Food_Industry_Age_Wealth> Food_Industry_Age_Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry_Age_Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry_Age_Wealth", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Industry_Age_Wealth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Industry_Age_Wealth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Industry_Age_Wealth object.
        /// </summary>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="ageId">Initial value of the AgeId property.</param>
        /// <param name="wealthId">Initial value of the WealthId property.</param>
        /// <param name="sigma">Initial value of the Sigma property.</param>
        /// <param name="sensitivityType">Initial value of the SensitivityType property.</param>
        /// <param name="sensitivityDistance">Initial value of the SensitivityDistance property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        public static Food_Industry_Age_Wealth CreateFood_Industry_Age_Wealth(global::System.Int32 economyId, global::System.Int32 ageId, global::System.Int32 wealthId, global::System.Double sigma, global::System.Double sensitivityType, global::System.Double sensitivityDistance, global::System.Int32 industryId)
        {
            Food_Industry_Age_Wealth food_Industry_Age_Wealth = new Food_Industry_Age_Wealth();
            food_Industry_Age_Wealth.EconomyId = economyId;
            food_Industry_Age_Wealth.AgeId = ageId;
            food_Industry_Age_Wealth.WealthId = wealthId;
            food_Industry_Age_Wealth.Sigma = sigma;
            food_Industry_Age_Wealth.SensitivityType = sensitivityType;
            food_Industry_Age_Wealth.SensitivityDistance = sensitivityDistance;
            food_Industry_Age_Wealth.IndustryId = industryId;
            return food_Industry_Age_Wealth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeId
        {
            get
            {
                return _AgeId;
            }
            set
            {
                if (_AgeId != value)
                {
                    OnAgeIdChanging(value);
                    ReportPropertyChanging("AgeId");
                    _AgeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgeId");
                    OnAgeIdChanged();
                }
            }
        }
        private global::System.Int32 _AgeId;
        partial void OnAgeIdChanging(global::System.Int32 value);
        partial void OnAgeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WealthId
        {
            get
            {
                return _WealthId;
            }
            set
            {
                if (_WealthId != value)
                {
                    OnWealthIdChanging(value);
                    ReportPropertyChanging("WealthId");
                    _WealthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WealthId");
                    OnWealthIdChanged();
                }
            }
        }
        private global::System.Int32 _WealthId;
        partial void OnWealthIdChanging(global::System.Int32 value);
        partial void OnWealthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Sigma
        {
            get
            {
                return _Sigma;
            }
            set
            {
                OnSigmaChanging(value);
                ReportPropertyChanging("Sigma");
                _Sigma = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sigma");
                OnSigmaChanged();
            }
        }
        private global::System.Double _Sigma;
        partial void OnSigmaChanging(global::System.Double value);
        partial void OnSigmaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SensitivityType
        {
            get
            {
                return _SensitivityType;
            }
            set
            {
                OnSensitivityTypeChanging(value);
                ReportPropertyChanging("SensitivityType");
                _SensitivityType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SensitivityType");
                OnSensitivityTypeChanged();
            }
        }
        private global::System.Double _SensitivityType;
        partial void OnSensitivityTypeChanging(global::System.Double value);
        partial void OnSensitivityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SensitivityDistance
        {
            get
            {
                return _SensitivityDistance;
            }
            set
            {
                OnSensitivityDistanceChanging(value);
                ReportPropertyChanging("SensitivityDistance");
                _SensitivityDistance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SensitivityDistance");
                OnSensitivityDistanceChanged();
            }
        }
        private global::System.Double _SensitivityDistance;
        partial void OnSensitivityDistanceChanging(global::System.Double value);
        partial void OnSensitivityDistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Age", "Age")]
        public Age Age
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Age", "Age").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Age", "Age").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Age> AgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Age", "Age");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Age", "Age", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Economy", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Economy", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Economy", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Economy", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Economy", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Wealth", "Wealth")]
        public Wealth Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Wealth", "Wealth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Wealth", "Wealth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wealth> WealthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Wealth", "Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Wealth", "Wealth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry")]
        public Food_Industry Food_Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Industry> Food_IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Age_Wealth_Food_Industry", "Food_Industry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Industry_Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Industry_Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Industry_Company object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="entryCost">Initial value of the EntryCost property.</param>
        /// <param name="capacityCost">Initial value of the CapacityCost property.</param>
        /// <param name="marginalCost">Initial value of the MarginalCost property.</param>
        /// <param name="maintenanceCost">Initial value of the MaintenanceCost property.</param>
        /// <param name="inventoryCost">Initial value of the InventoryCost property.</param>
        public static Food_Industry_Company CreateFood_Industry_Company(global::System.Int32 companyId, global::System.Int32 industryId, global::System.Int32 economyId, global::System.Double entryCost, global::System.Double capacityCost, global::System.Double marginalCost, global::System.Double maintenanceCost, global::System.Double inventoryCost)
        {
            Food_Industry_Company food_Industry_Company = new Food_Industry_Company();
            food_Industry_Company.CompanyId = companyId;
            food_Industry_Company.IndustryId = industryId;
            food_Industry_Company.EconomyId = economyId;
            food_Industry_Company.EntryCost = entryCost;
            food_Industry_Company.CapacityCost = capacityCost;
            food_Industry_Company.MarginalCost = marginalCost;
            food_Industry_Company.MaintenanceCost = maintenanceCost;
            food_Industry_Company.InventoryCost = inventoryCost;
            return food_Industry_Company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double EntryCost
        {
            get
            {
                return _EntryCost;
            }
            set
            {
                OnEntryCostChanging(value);
                ReportPropertyChanging("EntryCost");
                _EntryCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryCost");
                OnEntryCostChanged();
            }
        }
        private global::System.Double _EntryCost;
        partial void OnEntryCostChanging(global::System.Double value);
        partial void OnEntryCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CapacityCost
        {
            get
            {
                return _CapacityCost;
            }
            set
            {
                OnCapacityCostChanging(value);
                ReportPropertyChanging("CapacityCost");
                _CapacityCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityCost");
                OnCapacityCostChanged();
            }
        }
        private global::System.Double _CapacityCost;
        partial void OnCapacityCostChanging(global::System.Double value);
        partial void OnCapacityCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MarginalCost
        {
            get
            {
                return _MarginalCost;
            }
            set
            {
                OnMarginalCostChanging(value);
                ReportPropertyChanging("MarginalCost");
                _MarginalCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginalCost");
                OnMarginalCostChanged();
            }
        }
        private global::System.Double _MarginalCost;
        partial void OnMarginalCostChanging(global::System.Double value);
        partial void OnMarginalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntranceRoundId
        {
            get
            {
                return _EntranceRoundId;
            }
            set
            {
                OnEntranceRoundIdChanging(value);
                ReportPropertyChanging("EntranceRoundId");
                _EntranceRoundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceRoundId");
                OnEntranceRoundIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EntranceRoundId;
        partial void OnEntranceRoundIdChanging(Nullable<global::System.Int32> value);
        partial void OnEntranceRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaintenanceCost
        {
            get
            {
                return _MaintenanceCost;
            }
            set
            {
                OnMaintenanceCostChanging(value);
                ReportPropertyChanging("MaintenanceCost");
                _MaintenanceCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaintenanceCost");
                OnMaintenanceCostChanged();
            }
        }
        private global::System.Double _MaintenanceCost;
        partial void OnMaintenanceCostChanging(global::System.Double value);
        partial void OnMaintenanceCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InventoryCost
        {
            get
            {
                return _InventoryCost;
            }
            set
            {
                OnInventoryCostChanging(value);
                ReportPropertyChanging("InventoryCost");
                _InventoryCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryCost");
                OnInventoryCostChanged();
            }
        }
        private global::System.Double _InventoryCost;
        partial void OnInventoryCostChanging(global::System.Double value);
        partial void OnInventoryCostChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Food_Industry", "Food_Industry")]
        public Food_Industry Food_Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Food_Industry", "Food_Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Food_Industry", "Food_Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Industry> Food_IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Food_Industry", "Food_Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Food_Industry", "Food_Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company_Round")]
        public EntityCollection<Food_Industry_Company_Round> Food_Industry_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Industry_Company_Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Industry_Company_Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Industry_Company_Round object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="costOfEntry">Initial value of the CostOfEntry property.</param>
        /// <param name="costOfCapacity">Initial value of the CostOfCapacity property.</param>
        /// <param name="costOfProduction">Initial value of the CostOfProduction property.</param>
        /// <param name="costOfInventory">Initial value of the CostOfInventory property.</param>
        /// <param name="revenue">Initial value of the Revenue property.</param>
        /// <param name="costOfMaintenance">Initial value of the CostOfMaintenance property.</param>
        public static Food_Industry_Company_Round CreateFood_Industry_Company_Round(global::System.Int32 roundId, global::System.Int32 companyId, global::System.Int32 industryId, global::System.Int32 economyId, global::System.Double costOfEntry, global::System.Double costOfCapacity, global::System.Double costOfProduction, global::System.Double costOfInventory, global::System.Double revenue, global::System.Double costOfMaintenance)
        {
            Food_Industry_Company_Round food_Industry_Company_Round = new Food_Industry_Company_Round();
            food_Industry_Company_Round.RoundId = roundId;
            food_Industry_Company_Round.CompanyId = companyId;
            food_Industry_Company_Round.IndustryId = industryId;
            food_Industry_Company_Round.EconomyId = economyId;
            food_Industry_Company_Round.CostOfEntry = costOfEntry;
            food_Industry_Company_Round.CostOfCapacity = costOfCapacity;
            food_Industry_Company_Round.CostOfProduction = costOfProduction;
            food_Industry_Company_Round.CostOfInventory = costOfInventory;
            food_Industry_Company_Round.Revenue = revenue;
            food_Industry_Company_Round.CostOfMaintenance = costOfMaintenance;
            return food_Industry_Company_Round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfEntry
        {
            get
            {
                return _CostOfEntry;
            }
            set
            {
                OnCostOfEntryChanging(value);
                ReportPropertyChanging("CostOfEntry");
                _CostOfEntry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfEntry");
                OnCostOfEntryChanged();
            }
        }
        private global::System.Double _CostOfEntry;
        partial void OnCostOfEntryChanging(global::System.Double value);
        partial void OnCostOfEntryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfCapacity
        {
            get
            {
                return _CostOfCapacity;
            }
            set
            {
                OnCostOfCapacityChanging(value);
                ReportPropertyChanging("CostOfCapacity");
                _CostOfCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfCapacity");
                OnCostOfCapacityChanged();
            }
        }
        private global::System.Double _CostOfCapacity;
        partial void OnCostOfCapacityChanging(global::System.Double value);
        partial void OnCostOfCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfProduction
        {
            get
            {
                return _CostOfProduction;
            }
            set
            {
                OnCostOfProductionChanging(value);
                ReportPropertyChanging("CostOfProduction");
                _CostOfProduction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfProduction");
                OnCostOfProductionChanged();
            }
        }
        private global::System.Double _CostOfProduction;
        partial void OnCostOfProductionChanging(global::System.Double value);
        partial void OnCostOfProductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfInventory
        {
            get
            {
                return _CostOfInventory;
            }
            set
            {
                OnCostOfInventoryChanging(value);
                ReportPropertyChanging("CostOfInventory");
                _CostOfInventory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfInventory");
                OnCostOfInventoryChanged();
            }
        }
        private global::System.Double _CostOfInventory;
        partial void OnCostOfInventoryChanging(global::System.Double value);
        partial void OnCostOfInventoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Revenue
        {
            get
            {
                return _Revenue;
            }
            set
            {
                OnRevenueChanging(value);
                ReportPropertyChanging("Revenue");
                _Revenue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Revenue");
                OnRevenueChanged();
            }
        }
        private global::System.Double _Revenue;
        partial void OnRevenueChanging(global::System.Double value);
        partial void OnRevenueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfMaintenance
        {
            get
            {
                return _CostOfMaintenance;
            }
            set
            {
                OnCostOfMaintenanceChanging(value);
                ReportPropertyChanging("CostOfMaintenance");
                _CostOfMaintenance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfMaintenance");
                OnCostOfMaintenanceChanged();
            }
        }
        private global::System.Double _CostOfMaintenance;
        partial void OnCostOfMaintenanceChanging(global::System.Double value);
        partial void OnCostOfMaintenanceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Company_Round", "Company_Round")]
        public Company_Round Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Company_Round", "Company_Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Company_Round", "Company_Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company_Round> Company_RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Company_Round", "Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Company_Round", "Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company")]
        public Food_Industry_Company Food_Industry_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Industry_Company> Food_Industry_CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Food_Industry_Company", "Food_Industry_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Round", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Round", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Round", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Round", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Round", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Good_Round")]
        public EntityCollection<Food_Good_Round> Food_Good_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Good_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Food_Industry_Company_Round", "Food_Good_Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Industry_Good_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Industry_Good_Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Industry_Good_Type object.
        /// </summary>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Food_Industry_Good_Type CreateFood_Industry_Good_Type(global::System.Int32 typeId, global::System.Int32 industryId, global::System.Int32 economyId, global::System.String name)
        {
            Food_Industry_Good_Type food_Industry_Good_Type = new Food_Industry_Good_Type();
            food_Industry_Good_Type.TypeId = typeId;
            food_Industry_Good_Type.IndustryId = industryId;
            food_Industry_Good_Type.EconomyId = economyId;
            food_Industry_Good_Type.Name = name;
            return food_Industry_Good_Type;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                if (_TypeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _TypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Food_Industry_Good_Type", "Food_Good")]
        public EntityCollection<Food_Good> Food_Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Food_Industry_Good_Type", "Food_Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Food_Industry_Good_Type", "Food_Good", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry")]
        public Food_Industry Food_Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Industry> Food_IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Good_Type_Food_Industry", "Food_Industry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Food_Industry_Household_Company_Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Food_Industry_Household_Company_Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Food_Industry_Household_Company_Round object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="goodId">Initial value of the GoodId property.</param>
        /// <param name="householdId">Initial value of the HouseholdId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="quantityBought">Initial value of the QuantityBought property.</param>
        /// <param name="priceBought">Initial value of the PriceBought property.</param>
        /// <param name="surplus">Initial value of the Surplus property.</param>
        public static Food_Industry_Household_Company_Round CreateFood_Industry_Household_Company_Round(global::System.Int32 roundId, global::System.Int32 companyId, global::System.Int32 industryId, global::System.Int32 goodId, global::System.Int32 householdId, global::System.Int32 economyId, global::System.Double quantityBought, global::System.Double priceBought, global::System.Double surplus)
        {
            Food_Industry_Household_Company_Round food_Industry_Household_Company_Round = new Food_Industry_Household_Company_Round();
            food_Industry_Household_Company_Round.RoundId = roundId;
            food_Industry_Household_Company_Round.CompanyId = companyId;
            food_Industry_Household_Company_Round.IndustryId = industryId;
            food_Industry_Household_Company_Round.GoodId = goodId;
            food_Industry_Household_Company_Round.HouseholdId = householdId;
            food_Industry_Household_Company_Round.EconomyId = economyId;
            food_Industry_Household_Company_Round.QuantityBought = quantityBought;
            food_Industry_Household_Company_Round.PriceBought = priceBought;
            food_Industry_Household_Company_Round.Surplus = surplus;
            return food_Industry_Household_Company_Round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodId
        {
            get
            {
                return _GoodId;
            }
            set
            {
                if (_GoodId != value)
                {
                    OnGoodIdChanging(value);
                    ReportPropertyChanging("GoodId");
                    _GoodId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoodId");
                    OnGoodIdChanged();
                }
            }
        }
        private global::System.Int32 _GoodId;
        partial void OnGoodIdChanging(global::System.Int32 value);
        partial void OnGoodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseholdId
        {
            get
            {
                return _HouseholdId;
            }
            set
            {
                if (_HouseholdId != value)
                {
                    OnHouseholdIdChanging(value);
                    ReportPropertyChanging("HouseholdId");
                    _HouseholdId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseholdId");
                    OnHouseholdIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseholdId;
        partial void OnHouseholdIdChanging(global::System.Int32 value);
        partial void OnHouseholdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double QuantityBought
        {
            get
            {
                return _QuantityBought;
            }
            set
            {
                OnQuantityBoughtChanging(value);
                ReportPropertyChanging("QuantityBought");
                _QuantityBought = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuantityBought");
                OnQuantityBoughtChanged();
            }
        }
        private global::System.Double _QuantityBought;
        partial void OnQuantityBoughtChanging(global::System.Double value);
        partial void OnQuantityBoughtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PriceBought
        {
            get
            {
                return _PriceBought;
            }
            set
            {
                OnPriceBoughtChanging(value);
                ReportPropertyChanging("PriceBought");
                _PriceBought = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceBought");
                OnPriceBoughtChanged();
            }
        }
        private global::System.Double _PriceBought;
        partial void OnPriceBoughtChanging(global::System.Double value);
        partial void OnPriceBoughtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Surplus
        {
            get
            {
                return _Surplus;
            }
            set
            {
                OnSurplusChanging(value);
                ReportPropertyChanging("Surplus");
                _Surplus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Surplus");
                OnSurplusChanged();
            }
        }
        private global::System.Double _Surplus;
        partial void OnSurplusChanging(global::System.Double value);
        partial void OnSurplusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Household", "Household")]
        public Household Household
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Household", "Household").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Household", "Household").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Household> HouseholdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Household", "Household");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Household", "Household", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Good")]
        public Food_Good Food_Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Good").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Good").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Food_Good> Food_GoodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Food_Good", "Food_Good", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Round", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Round", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Round", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Round", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Round", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Good")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Food_Good))]
    public partial class Good : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Good object.
        /// </summary>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="goodId">Initial value of the GoodId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="identifier">Initial value of the Identifier property.</param>
        public static Good CreateGood(global::System.Int32 industryId, global::System.Int32 goodId, global::System.Int32 economyId, global::System.String identifier)
        {
            Good good = new Good();
            good.IndustryId = industryId;
            good.GoodId = goodId;
            good.EconomyId = economyId;
            good.Identifier = identifier;
            return good;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodId
        {
            get
            {
                return _GoodId;
            }
            set
            {
                if (_GoodId != value)
                {
                    OnGoodIdChanging(value);
                    ReportPropertyChanging("GoodId");
                    _GoodId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoodId");
                    OnGoodIdChanged();
                }
            }
        }
        private global::System.Int32 _GoodId;
        partial void OnGoodIdChanging(global::System.Int32 value);
        partial void OnGoodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                OnIdentifierChanging(value);
                ReportPropertyChanging("Identifier");
                _Identifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Identifier");
                OnIdentifierChanged();
            }
        }
        private global::System.String _Identifier;
        partial void OnIdentifierChanging(global::System.String value);
        partial void OnIdentifierChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Good_Good", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Good_Good", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Good_Good", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Good_Good", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("Fuqua.CompetativeAnalysis.MarketGame.FK_Good_Good", "Industry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Household")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Household : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Household object.
        /// </summary>
        /// <param name="householdId">Initial value of the HouseholdId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="identifier">Initial value of the Identifier property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="ageId">Initial value of the AgeId property.</param>
        /// <param name="wealthId">Initial value of the WealthId property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        public static Household CreateHousehold(global::System.Int32 householdId, global::System.Int32 economyId, global::System.String identifier, global::System.Int32 locationId, global::System.Int32 ageId, global::System.Int32 wealthId, global::System.Int32 profileId)
        {
            Household household = new Household();
            household.HouseholdId = householdId;
            household.EconomyId = economyId;
            household.Identifier = identifier;
            household.LocationId = locationId;
            household.AgeId = ageId;
            household.WealthId = wealthId;
            household.ProfileId = profileId;
            return household;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HouseholdId
        {
            get
            {
                return _HouseholdId;
            }
            set
            {
                if (_HouseholdId != value)
                {
                    OnHouseholdIdChanging(value);
                    ReportPropertyChanging("HouseholdId");
                    _HouseholdId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HouseholdId");
                    OnHouseholdIdChanged();
                }
            }
        }
        private global::System.Int32 _HouseholdId;
        partial void OnHouseholdIdChanging(global::System.Int32 value);
        partial void OnHouseholdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                OnIdentifierChanging(value);
                ReportPropertyChanging("Identifier");
                _Identifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Identifier");
                OnIdentifierChanged();
            }
        }
        private global::System.String _Identifier;
        partial void OnIdentifierChanging(global::System.String value);
        partial void OnIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeId
        {
            get
            {
                return _AgeId;
            }
            set
            {
                OnAgeIdChanging(value);
                ReportPropertyChanging("AgeId");
                _AgeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeId");
                OnAgeIdChanged();
            }
        }
        private global::System.Int32 _AgeId;
        partial void OnAgeIdChanging(global::System.Int32 value);
        partial void OnAgeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WealthId
        {
            get
            {
                return _WealthId;
            }
            set
            {
                OnWealthIdChanging(value);
                ReportPropertyChanging("WealthId");
                _WealthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WealthId");
                OnWealthIdChanged();
            }
        }
        private global::System.Int32 _WealthId;
        partial void OnWealthIdChanging(global::System.Int32 value);
        partial void OnWealthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Age", "Age")]
        public Age Age
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Age", "Age").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Age", "Age").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Age> AgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Age", "Age");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Age", "Age", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Household", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Household", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Household", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Household", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Household", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Profile", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Profile", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Profile", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Profile", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Profile", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Wealth", "Wealth")]
        public Wealth Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Wealth", "Wealth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Wealth", "Wealth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wealth> WealthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Wealth", "Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Wealth", "Wealth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Household", "Food_Household_Company_Round")]
        public EntityCollection<Food_Household_Company_Round> Food_Household_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Household", "Food_Household_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Household", "Food_Household_Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Household", "Food_Industry_Household_Company_Round")]
        public EntityCollection<Food_Industry_Household_Company_Round> Food_Industry_Household_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Household", "Food_Industry_Household_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Household", "Food_Industry_Household_Company_Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="IM_Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IM_Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IM_Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static IM_Role CreateIM_Role(global::System.Int32 roleId, global::System.String name)
        {
            IM_Role iM_Role = new IM_Role();
            iM_Role.RoleId = roleId;
            iM_Role.Name = name;
            return iM_Role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "IM_User_Role", "IM_User")]
        public EntityCollection<IM_User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IM_User>("Fuqua.CompetativeAnalysis.MarketGame.IM_User_Role", "IM_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IM_User>("Fuqua.CompetativeAnalysis.MarketGame.IM_User_Role", "IM_User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="IM_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IM_User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IM_User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static IM_User CreateIM_User(global::System.Int32 userId, global::System.String userName, global::System.Boolean active)
        {
            IM_User iM_User = new IM_User();
            iM_User.UserId = userId;
            iM_User.UserName = userName;
            iM_User.Active = active;
            return iM_User;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            private set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "Company_User", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("Fuqua.CompetativeAnalysis.MarketGame.Company_User", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("Fuqua.CompetativeAnalysis.MarketGame.Company_User", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "IM_User_Role", "IM_Role")]
        public EntityCollection<IM_Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IM_Role>("Fuqua.CompetativeAnalysis.MarketGame.IM_User_Role", "IM_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IM_Role>("Fuqua.CompetativeAnalysis.MarketGame.IM_User_Role", "IM_Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Industry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Food_Industry))]
    public partial class Industry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Industry object.
        /// </summary>
        /// <param name="industryId">Initial value of the IndustryId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Industry CreateIndustry(global::System.Int32 industryId, global::System.Int32 economyId, global::System.String name, global::System.String type)
        {
            Industry industry = new Industry();
            industry.IndustryId = industryId;
            industry.EconomyId = economyId;
            industry.Name = name;
            industry.Type = type;
            return industry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                if (_IndustryId != value)
                {
                    OnIndustryIdChanging(value);
                    ReportPropertyChanging("IndustryId");
                    _IndustryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryId");
                    OnIndustryIdChanged();
                }
            }
        }
        private global::System.Int32 _IndustryId;
        partial void OnIndustryIdChanging(global::System.Int32 value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Industry_Economy", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Industry_Economy", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Industry_Economy", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Industry_Economy", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Industry_Economy", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Good_Good", "Good")]
        public EntityCollection<Good> Goods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Good_Good", "Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Good_Good", "Good", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="identifier">Initial value of the Identifier property.</param>
        /// <param name="centerX">Initial value of the CenterX property.</param>
        /// <param name="centerY">Initial value of the CenterY property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="totalPopulation">Initial value of the TotalPopulation property.</param>
        /// <param name="interactive">Initial value of the Interactive property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.Int32 economyId, global::System.String identifier, global::System.Double centerX, global::System.Double centerY, global::System.Int32 profileId, global::System.Int32 totalPopulation, global::System.Boolean interactive)
        {
            Location location = new Location();
            location.LocationId = locationId;
            location.EconomyId = economyId;
            location.Identifier = identifier;
            location.CenterX = centerX;
            location.CenterY = centerY;
            location.ProfileId = profileId;
            location.TotalPopulation = totalPopulation;
            location.Interactive = interactive;
            return location;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                OnIdentifierChanging(value);
                ReportPropertyChanging("Identifier");
                _Identifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Identifier");
                OnIdentifierChanged();
            }
        }
        private global::System.String _Identifier;
        partial void OnIdentifierChanging(global::System.String value);
        partial void OnIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CenterX
        {
            get
            {
                return _CenterX;
            }
            set
            {
                OnCenterXChanging(value);
                ReportPropertyChanging("CenterX");
                _CenterX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CenterX");
                OnCenterXChanged();
            }
        }
        private global::System.Double _CenterX;
        partial void OnCenterXChanging(global::System.Double value);
        partial void OnCenterXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CenterY
        {
            get
            {
                return _CenterY;
            }
            set
            {
                OnCenterYChanging(value);
                ReportPropertyChanging("CenterY");
                _CenterY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CenterY");
                OnCenterYChanged();
            }
        }
        private global::System.Double _CenterY;
        partial void OnCenterYChanging(global::System.Double value);
        partial void OnCenterYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalPopulation
        {
            get
            {
                return _TotalPopulation;
            }
            set
            {
                OnTotalPopulationChanging(value);
                ReportPropertyChanging("TotalPopulation");
                _TotalPopulation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPopulation");
                OnTotalPopulationChanged();
            }
        }
        private global::System.Int32 _TotalPopulation;
        partial void OnTotalPopulationChanging(global::System.Int32 value);
        partial void OnTotalPopulationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Interactive
        {
            get
            {
                return _Interactive;
            }
            set
            {
                OnInteractiveChanging(value);
                ReportPropertyChanging("Interactive");
                _Interactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Interactive");
                OnInteractiveChanged();
            }
        }
        private global::System.Boolean _Interactive;
        partial void OnInteractiveChanging(global::System.Boolean value);
        partial void OnInteractiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Location_Economy", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Economy", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Economy", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Economy", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Economy", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Location", "Household")]
        public EntityCollection<Household> Households
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Location", "Household");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Location", "Household", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Location_Profile", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Profile", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Profile", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Profile", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Profile", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Location", "Food_Good")]
        public EntityCollection<Food_Good> Food_Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Location", "Food_Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Location", "Food_Good", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "vw_LocationPointsLocation", "vw_LocationPoints")]
        public EntityCollection<vw_LocationPoints> vw_LocationPoints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vw_LocationPoints>("Fuqua.CompetativeAnalysis.MarketGame.vw_LocationPointsLocation", "vw_LocationPoints");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vw_LocationPoints>("Fuqua.CompetativeAnalysis.MarketGame.vw_LocationPointsLocation", "vw_LocationPoints", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Profile CreateProfile(global::System.Int32 profileId, global::System.Int32 economyId, global::System.String name)
        {
            Profile profile = new Profile();
            profile.ProfileId = profileId;
            profile.EconomyId = economyId;
            profile.Name = name;
            return profile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                if (_ProfileId != value)
                {
                    OnProfileIdChanging(value);
                    ReportPropertyChanging("ProfileId");
                    _ProfileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileId");
                    OnProfileIdChanged();
                }
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Profile", "Household")]
        public EntityCollection<Household> Households
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Profile", "Household");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Profile", "Household", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Location_Profile", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Profile", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("Fuqua.CompetativeAnalysis.MarketGame.FK_Location_Profile", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Economy", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Economy", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Economy", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Economy", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Economy", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Profile", "Profile_Age_Wealth")]
        public EntityCollection<Profile_Age_Wealth> Profile_Age_Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Profile", "Profile_Age_Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Profile", "Profile_Age_Wealth", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Profile_Age_Wealth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile_Age_Wealth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile_Age_Wealth object.
        /// </summary>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="ageId">Initial value of the AgeId property.</param>
        /// <param name="wealthId">Initial value of the WealthId property.</param>
        /// <param name="probability">Initial value of the Probability property.</param>
        public static Profile_Age_Wealth CreateProfile_Age_Wealth(global::System.Int32 profileId, global::System.Int32 economyId, global::System.Int32 ageId, global::System.Int32 wealthId, global::System.Double probability)
        {
            Profile_Age_Wealth profile_Age_Wealth = new Profile_Age_Wealth();
            profile_Age_Wealth.ProfileId = profileId;
            profile_Age_Wealth.EconomyId = economyId;
            profile_Age_Wealth.AgeId = ageId;
            profile_Age_Wealth.WealthId = wealthId;
            profile_Age_Wealth.Probability = probability;
            return profile_Age_Wealth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                if (_ProfileId != value)
                {
                    OnProfileIdChanging(value);
                    ReportPropertyChanging("ProfileId");
                    _ProfileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileId");
                    OnProfileIdChanged();
                }
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeId
        {
            get
            {
                return _AgeId;
            }
            set
            {
                if (_AgeId != value)
                {
                    OnAgeIdChanging(value);
                    ReportPropertyChanging("AgeId");
                    _AgeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgeId");
                    OnAgeIdChanged();
                }
            }
        }
        private global::System.Int32 _AgeId;
        partial void OnAgeIdChanging(global::System.Int32 value);
        partial void OnAgeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WealthId
        {
            get
            {
                return _WealthId;
            }
            set
            {
                if (_WealthId != value)
                {
                    OnWealthIdChanging(value);
                    ReportPropertyChanging("WealthId");
                    _WealthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WealthId");
                    OnWealthIdChanged();
                }
            }
        }
        private global::System.Int32 _WealthId;
        partial void OnWealthIdChanging(global::System.Int32 value);
        partial void OnWealthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Probability
        {
            get
            {
                return _Probability;
            }
            set
            {
                OnProbabilityChanging(value);
                ReportPropertyChanging("Probability");
                _Probability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Probability");
                OnProbabilityChanged();
            }
        }
        private global::System.Double _Probability;
        partial void OnProbabilityChanging(global::System.Double value);
        partial void OnProbabilityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Age", "Age")]
        public Age Age
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Age", "Age").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Age", "Age").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Age> AgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Age", "Age");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Age>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Age", "Age", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Profile", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Profile", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Profile", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Profile", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Profile", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Wealth", "Wealth")]
        public Wealth Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Wealth", "Wealth").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Wealth", "Wealth").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wealth> WealthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Wealth", "Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Wealth", "Wealth", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Round object.
        /// </summary>
        /// <param name="roundId">Initial value of the RoundId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="identifier">Initial value of the Identifier property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        public static Round CreateRound(global::System.Int32 roundId, global::System.Int32 economyId, global::System.String identifier, global::System.Int32 sequence)
        {
            Round round = new Round();
            round.RoundId = roundId;
            round.EconomyId = economyId;
            round.Identifier = identifier;
            round.Sequence = sequence;
            return round;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundId
        {
            get
            {
                return _RoundId;
            }
            set
            {
                if (_RoundId != value)
                {
                    OnRoundIdChanging(value);
                    ReportPropertyChanging("RoundId");
                    _RoundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoundId");
                    OnRoundIdChanged();
                }
            }
        }
        private global::System.Int32 _RoundId;
        partial void OnRoundIdChanging(global::System.Int32 value);
        partial void OnRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                OnIdentifierChanging(value);
                ReportPropertyChanging("Identifier");
                _Identifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Identifier");
                OnIdentifierChanged();
            }
        }
        private global::System.String _Identifier;
        partial void OnIdentifierChanging(global::System.String value);
        partial void OnIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousRoundId
        {
            get
            {
                return _PreviousRoundId;
            }
            set
            {
                OnPreviousRoundIdChanging(value);
                ReportPropertyChanging("PreviousRoundId");
                _PreviousRoundId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousRoundId");
                OnPreviousRoundIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousRoundId;
        partial void OnPreviousRoundIdChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Company_Round_Round", "Company_Round")]
        public EntityCollection<Company_Round> Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Round", "Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Company_Round_Round", "Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Economy_Round", "Economy")]
        public EntityCollection<Economy> Economies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Economy_Round", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Economy_Round", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Round_Round", "PreviousRound")]
        public EntityCollection<Round> CurrentRound
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Round_Round", "PreviousRound");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Round_Round", "PreviousRound", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Round_Round", "CurrentRound")]
        public Round PreviousRound
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Round_Round", "CurrentRound").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Round_Round", "CurrentRound").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> PreviousRoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Round_Round", "CurrentRound");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Round_Round", "CurrentRound", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Household_Company_Round_Round", "Food_Household_Company_Round")]
        public EntityCollection<Food_Household_Company_Round> Food_Household_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Round", "Food_Household_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Household_Company_Round_Round", "Food_Household_Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Good_Round_Round", "Food_Good_Round")]
        public EntityCollection<Food_Good_Round> Food_Good_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Round", "Food_Good_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Good_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Good_Round_Round", "Food_Good_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round_Round", "Food_Industry_Company_Round")]
        public EntityCollection<Food_Industry_Company_Round> Food_Industry_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Round", "Food_Industry_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round_Round", "Food_Industry_Company_Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Company_Round", "Food_Industry_Company")]
        public EntityCollection<Food_Industry_Company> Food_Industry_Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round", "Food_Industry_Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Company>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Company_Round", "Food_Industry_Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Industry_Household_Company_Round_Round", "Food_Industry_Household_Company_Round")]
        public EntityCollection<Food_Industry_Household_Company_Round> Food_Industry_Household_Company_Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Round", "Food_Industry_Household_Company_Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Household_Company_Round>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Industry_Household_Company_Round_Round", "Food_Industry_Household_Company_Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="vw_LocationPoints")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_LocationPoints : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_LocationPoints object.
        /// </summary>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="sequence">Initial value of the sequence property.</param>
        /// <param name="lat">Initial value of the Lat property.</param>
        /// <param name="long">Initial value of the Long property.</param>
        public static vw_LocationPoints Createvw_LocationPoints(global::System.Int32 economyId, global::System.Int32 locationId, global::System.Int64 sequence, global::System.Double lat, global::System.Double @long)
        {
            vw_LocationPoints vw_LocationPoints = new vw_LocationPoints();
            vw_LocationPoints.EconomyId = economyId;
            vw_LocationPoints.LocationId = locationId;
            vw_LocationPoints.sequence = sequence;
            vw_LocationPoints.Lat = lat;
            vw_LocationPoints.Long = @long;
            return vw_LocationPoints;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 sequence
        {
            get
            {
                return _sequence;
            }
            set
            {
                if (_sequence != value)
                {
                    OnsequenceChanging(value);
                    ReportPropertyChanging("sequence");
                    _sequence = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("sequence");
                    OnsequenceChanged();
                }
            }
        }
        private global::System.Int64 _sequence;
        partial void OnsequenceChanging(global::System.Int64 value);
        partial void OnsequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Double _Lat;
        partial void OnLatChanging(global::System.Double value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Long
        {
            get
            {
                return _Long;
            }
            set
            {
                OnLongChanging(value);
                ReportPropertyChanging("Long");
                _Long = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Long");
                OnLongChanged();
            }
        }
        private global::System.Double _Long;
        partial void OnLongChanging(global::System.Double value);
        partial void OnLongChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "vw_LocationPointsLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.vw_LocationPointsLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.vw_LocationPointsLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.vw_LocationPointsLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Fuqua.CompetativeAnalysis.MarketGame.vw_LocationPointsLocation", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Fuqua.CompetativeAnalysis.MarketGame", Name="Wealth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wealth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wealth object.
        /// </summary>
        /// <param name="wealthId">Initial value of the WealthId property.</param>
        /// <param name="economyId">Initial value of the EconomyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="probability">Initial value of the Probability property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static Wealth CreateWealth(global::System.Int32 wealthId, global::System.Int32 economyId, global::System.String name, global::System.Double probability, global::System.Int32 displayOrder)
        {
            Wealth wealth = new Wealth();
            wealth.WealthId = wealthId;
            wealth.EconomyId = economyId;
            wealth.Name = name;
            wealth.Probability = probability;
            wealth.DisplayOrder = displayOrder;
            return wealth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WealthId
        {
            get
            {
                return _WealthId;
            }
            set
            {
                if (_WealthId != value)
                {
                    OnWealthIdChanging(value);
                    ReportPropertyChanging("WealthId");
                    _WealthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WealthId");
                    OnWealthIdChanged();
                }
            }
        }
        private global::System.Int32 _WealthId;
        partial void OnWealthIdChanging(global::System.Int32 value);
        partial void OnWealthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EconomyId
        {
            get
            {
                return _EconomyId;
            }
            set
            {
                if (_EconomyId != value)
                {
                    OnEconomyIdChanging(value);
                    ReportPropertyChanging("EconomyId");
                    _EconomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EconomyId");
                    OnEconomyIdChanged();
                }
            }
        }
        private global::System.Int32 _EconomyId;
        partial void OnEconomyIdChanging(global::System.Int32 value);
        partial void OnEconomyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Probability
        {
            get
            {
                return _Probability;
            }
            set
            {
                OnProbabilityChanging(value);
                ReportPropertyChanging("Probability");
                _Probability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Probability");
                OnProbabilityChanged();
            }
        }
        private global::System.Double _Probability;
        partial void OnProbabilityChanging(global::System.Double value);
        partial void OnProbabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Wealth_Economy", "Economy")]
        public Economy Economy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Wealth_Economy", "Economy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Wealth_Economy", "Economy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Economy> EconomyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Wealth_Economy", "Economy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Economy>("Fuqua.CompetativeAnalysis.MarketGame.FK_Wealth_Economy", "Economy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Household_Wealth", "Household")]
        public EntityCollection<Household> Households
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Wealth", "Household");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Household>("Fuqua.CompetativeAnalysis.MarketGame.FK_Household_Wealth", "Household", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Profile_Age_Wealth_Wealth", "Profile_Age_Wealth")]
        public EntityCollection<Profile_Age_Wealth> Profile_Age_Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Wealth", "Profile_Age_Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Profile_Age_Wealth_Wealth", "Profile_Age_Wealth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fuqua.CompetativeAnalysis.MarketGame", "FK_Food_Age_Wealth_Wealth", "Food_Industry_Age_Wealth")]
        public EntityCollection<Food_Industry_Age_Wealth> Food_Industry_Age_Wealth
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Wealth", "Food_Industry_Age_Wealth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Food_Industry_Age_Wealth>("Fuqua.CompetativeAnalysis.MarketGame.FK_Food_Age_Wealth_Wealth", "Food_Industry_Age_Wealth", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
